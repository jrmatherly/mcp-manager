# MCP Registry Gateway - Root Environment Configuration
# Copy this to .env for development or customize for production
#
# This file uses the SAME prefixed variables as backend/.env.example
# for complete consistency across Docker and application configuration.

# ============================================================================
# MAIN APPLICATION SETTINGS (no prefix - used by main Settings class)
# ============================================================================
APP_NAME="MCP Registry Gateway"
APP_VERSION="0.1.0"
ENVIRONMENT=development
DEBUG=false
DOCS_URL=/docs
REDOC_URL=/redoc
OPENAPI_URL=/openapi.json

# Feature Flags
FEATURE_FLAGS="advanced_routing:true,circuit_breaker:true,connection_pooling:true,distributed_tracing:false,auto_scaling:false,webhook_notifications:false"

# Backend API Configuration
BACKEND_URL=http://localhost:8000

# ============================================================================
# DATABASE SETTINGS (DB_ prefix - DatabaseSettings class)
# ============================================================================

# PostgreSQL Configuration (Backend)
DB_POSTGRES_HOST=localhost
DB_POSTGRES_PORT=5432
DB_POSTGRES_USER=mcp_user
DB_POSTGRES_PASSWORD=mcp_password
DB_POSTGRES_DB=mcp_registry
DB_POSTGRES_SSL_MODE=disable

# PostgreSQL Configuration (Frontend)
DATABASE_URL=postgresql://mcp_user:mcp_password@localhost:5432/mcp_registry?sslmode=disable
DB_SSL=false

# Redis Configuration (DB_ prefix for consistency with DatabaseSettings)
DB_REDIS_HOST=localhost
DB_REDIS_PORT=6379
DB_REDIS_PASSWORD=
DB_REDIS_DB=0
DB_REDIS_SSL=false

# TimescaleDB Configuration (Optional - leave empty if not using)
DB_TIMESCALE_HOST=
DB_TIMESCALE_PORT=
DB_TIMESCALE_USER=
DB_TIMESCALE_PASSWORD=
DB_TIMESCALE_DB=

# Database Connection Pooling
DB_MAX_CONNECTIONS=50
DB_MIN_CONNECTIONS=5
DB_CONNECTION_TIMEOUT=30

# ============================================================================
# SECURITY SETTINGS (SECURITY_ prefix - SecuritySettings class)
# ============================================================================

# Better Auth Configuration
# Generate with: npx @better-auth/cli secret
BETTER_AUTH_SECRET=your-better-secret-key
BETTER_AUTH_URL=http://localhost:3000

# JWT Configuration
# Generate with: npx @better-auth/cli secret
SECURITY_JWT_SECRET_KEY=your-jwt-secret-change-this-in-production
SECURITY_JWT_ALGORITHM=HS256
SECURITY_JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
SECURITY_JWT_REFRESH_TOKEN_EXPIRE_DAYS=30

# OAuth Configuration
SECURITY_OAUTH_PROVIDERS=azure,github

# Azure AD OAuth
SECURITY_AZURE_TENANT_ID=
SECURITY_AZURE_CLIENT_ID=
SECURITY_AZURE_CLIENT_SECRET=

# GitHub OAuth
SECURITY_GITHUB_CLIENT_ID=
SECURITY_GITHUB_CLIENT_SECRET=

# CORS Configuration
SECURITY_ENABLE_CORS=true
SECURITY_CORS_ORIGINS="http://localhost:3000,http://localhost:8000,http://localhost:8001"
SECURITY_CORS_CREDENTIALS=true

# Rate Limiting
SECURITY_RATE_LIMIT_REQUESTS=100
SECURITY_RATE_LIMIT_WINDOW=60

# API Keys
SECURITY_ADMIN_API_KEY=
SECURITY_SERVER_REGISTRATION_KEYS=

# ============================================================================
# SERVICE SETTINGS (SERVICE_ prefix - ServiceSettings class)
# ============================================================================

# Server Configuration
SERVICE_HOST=0.0.0.0
SERVICE_PORT=8000
SERVICE_WORKERS=1
SERVICE_RELOAD=false

# Service Discovery
SERVICE_REGISTRY_REFRESH_INTERVAL=60
SERVICE_HEALTH_CHECK_INTERVAL=30
SERVICE_HEALTH_CHECK_TIMEOUT=10

# Request Routing
SERVICE_MAX_CONNECTIONS_PER_SERVER=50
SERVICE_REQUEST_TIMEOUT=30
SERVICE_CONNECTION_POOL_SIZE=100

# Circuit Breaker
SERVICE_CIRCUIT_BREAKER_THRESHOLD=5
SERVICE_CIRCUIT_BREAKER_TIMEOUT=60
SERVICE_CIRCUIT_BREAKER_RECOVERY_TIMEOUT=30

# Load Balancing
SERVICE_LOAD_BALANCING_STRATEGY=round_robin
SERVICE_HEALTH_CHECK_WEIGHT=0.3
SERVICE_LATENCY_WEIGHT=0.4
SERVICE_CAPACITY_WEIGHT=0.3

# Multi-tenancy
SERVICE_ENABLE_MULTI_TENANCY=true
SERVICE_DEFAULT_TENANT_ID=
SERVICE_TENANT_ISOLATION_STRICT=true

# ============================================================================
# FASTMCP SETTINGS (MREG_ prefix - FastMCPSettings class)
# ============================================================================

# FastMCP Server Configuration
MREG_FASTMCP_ENABLED=true
MREG_FASTMCP_PORT=8001
MREG_FASTMCP_HOST=0.0.0.0

# OAuth Proxy Configuration
MREG_FASTMCP_OAUTH_CALLBACK_URL=http://localhost:8001/oauth/callback
MREG_FASTMCP_OAUTH_SCOPES=User.Read,profile,openid,email

# Azure OAuth Configuration (MREG_ prefix to avoid conflicts with SECURITY_ settings)
MREG_AZURE_TENANT_ID=your-azure-tenant-id
MREG_AZURE_CLIENT_ID=your-azure-client-id
MREG_AZURE_CLIENT_SECRET=your-azure-client-secret

# Azure Application Insights (for distributed tracing) - Priority 2 Enhancement
MREG_AZURE_INSTRUMENTATION_KEY=""              # Optional: Azure Application Insights instrumentation key

# Middleware Configuration
MREG_FASTMCP_ENABLE_AUTH_MIDDLEWARE=true
MREG_FASTMCP_ENABLE_TOOL_ACCESS_CONTROL=true
MREG_FASTMCP_ENABLE_AUDIT_LOGGING=true
MREG_FASTMCP_ENABLE_RATE_LIMITING=true

# Rate Limiting Configuration
MREG_FASTMCP_REQUESTS_PER_MINUTE=100

# Advanced Rate Limiting Settings
MREG_FASTMCP_ENABLE_DISTRIBUTED_RATE_LIMITING=true
MREG_FASTMCP_ENABLE_PER_TENANT_LIMITS=true

# Tiered Rate Limits by User Role (requests per minute)
MREG_FASTMCP_RATE_LIMIT_ADMIN_RPM=1000
MREG_FASTMCP_RATE_LIMIT_USER_RPM=100
MREG_FASTMCP_RATE_LIMIT_SERVER_OWNER_RPM=500
MREG_FASTMCP_RATE_LIMIT_ANONYMOUS_RPM=20

# Per-Tenant Rate Limits
MREG_FASTMCP_RATE_LIMIT_TENANT_MULTIPLIER=10.0
MREG_FASTMCP_RATE_LIMIT_GLOBAL_RPM=10000

# Rate Limit Window and Burst Settings
MREG_FASTMCP_RATE_LIMIT_WINDOW_SECONDS=60
MREG_FASTMCP_RATE_LIMIT_BURST_FACTOR=2.0

# Rate Limit Storage Settings
MREG_FASTMCP_RATE_LIMIT_REDIS_KEY_TTL=120
MREG_FASTMCP_RATE_LIMIT_CLEANUP_INTERVAL=300

# DDoS Protection Settings
MREG_FASTMCP_ENABLE_DDOS_PROTECTION=true
MREG_FASTMCP_DDOS_DETECTION_THRESHOLD=1000
MREG_FASTMCP_DDOS_BAN_DURATION_SECONDS=3600

# ============================================================================
# MONITORING SETTINGS (MONITORING_ prefix - MonitoringSettings class)
# ============================================================================

# Metrics Configuration
MONITORING_ENABLE_METRICS=true
MONITORING_METRICS_EXPORT_INTERVAL=60
MONITORING_PROMETHEUS_PORT=9090

# Logging Configuration
MONITORING_LOG_LEVEL=INFO
MONITORING_LOG_FORMAT=structured
MONITORING_LOG_TO_FILE=false
MONITORING_LOG_FILE_PATH=
MONITORING_LOG_ROTATION_SIZE=10MB
MONITORING_LOG_RETENTION_DAYS=30

# Distributed Tracing
MONITORING_ENABLE_TRACING=false
MONITORING_JAEGER_ENDPOINT=
MONITORING_TRACE_SAMPLE_RATE=0.1

# Error Tracking
MONITORING_SENTRY_DSN=
MONITORING_SENTRY_ENVIRONMENT=development
MONITORING_SENTRY_SAMPLE_RATE=1.0

# Health Checks
MONITORING_ENABLE_HEALTH_CHECKS=true
MONITORING_HEALTH_CHECK_ENDPOINTS="/health,/ready,/metrics"

# ============================================================================
# DOCKER COMPOSE COMPATIBILITY
# ============================================================================
# Legacy variables for backward compatibility - these will be removed in future versions
# Use the DB_* and SECURITY_* prefixed variables above instead
POSTGRES_DB=${DB_POSTGRES_DB}
POSTGRES_USER=${DB_POSTGRES_USER}
POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD}
AZURE_TENANT_ID=${SECURITY_AZURE_TENANT_ID}
AZURE_CLIENT_ID=${SECURITY_AZURE_CLIENT_ID}  
AZURE_CLIENT_SECRET=${SECURITY_AZURE_CLIENT_SECRET}
OAUTH_CALLBACK_URL=${MREG_FASTMCP_OAUTH_CALLBACK_URL}

# ============================================================================
# CONFIGURATION NOTES
# ============================================================================
# This configuration file follows the same prefix-based system as backend/.env.example:
# - APP_*: Main application settings
# - DB_*: Database and caching configuration
# - SECURITY_*: Authentication and authorization settings
# - SERVICE_*: Service discovery and routing configuration
# - MREG_*: FastMCP server settings
#
# For complete configuration options, see backend/.env.example
# For configuration validation, run: uv run mcp-gateway validate

# ============================================================================
# PRIORITY 1 ENHANCEMENTS - NEW CONFIGURATION OPTIONS
# ============================================================================

# Enhanced Monitoring with Prometheus Metrics
# MREG_FASTMCP_ENABLE_PROMETHEUS_METRICS=true
# MREG_FASTMCP_METRICS_EXPORT_INTERVAL=60
# MREG_FASTMCP_ENABLE_USER_ANALYTICS=true
# MREG_FASTMCP_ENABLE_BEHAVIOR_TRACKING=true
# MREG_FASTMCP_SESSION_TRACKING_ENABLED=true

# Background Token Refresh Optimization
# MREG_FASTMCP_ENABLE_BACKGROUND_TOKEN_REFRESH=true
# MREG_FASTMCP_TOKEN_REFRESH_MARGIN_MINUTES=5
# MREG_FASTMCP_PROACTIVE_REFRESH_MINUTES=10
# MREG_FASTMCP_TOKEN_REFRESH_MAX_RETRIES=4
# MREG_FASTMCP_TOKEN_REFRESH_RETRY_INTERVALS="30,60,120,300"

# Advanced Per-Tenant Rate Limiting with Fairness Algorithm
# MREG_FASTMCP_ENABLE_TENANT_FAIRNESS_ALGORITHM=true
# MREG_FASTMCP_TENANT_FAIRNESS_WINDOW_SECONDS=300
# MREG_FASTMCP_TENANT_BURST_ALLOWANCE_FACTOR=1.5
# MREG_FASTMCP_ENABLE_SLIDING_WINDOW_RATE_LIMITING=true
# MREG_FASTMCP_FAIRNESS_WEIGHT_DEFAULT=1.0

# Connection Pool Tuning for Multi-User Scenarios
# MREG_FASTMCP_ENABLE_ADAPTIVE_CONNECTION_POOLING=true
# MREG_FASTMCP_CONNECTION_POOL_SCALING_ENABLED=true
# MREG_FASTMCP_MIN_POOL_SIZE=10
# MREG_FASTMCP_MAX_POOL_SIZE=100
# MREG_FASTMCP_POOL_SCALING_FACTOR=1.5
# MREG_FASTMCP_POOL_UTILIZATION_THRESHOLD=0.8

# Multi-User Support Configuration (100+ Concurrent Users)
# MREG_FASTMCP_MAX_CONCURRENT_USERS=500
# MREG_FASTMCP_SESSION_CLEANUP_INTERVAL=300
# MREG_FASTMCP_USER_ACTIVITY_TIMEOUT=1800
# MREG_FASTMCP_TENANT_RESOURCE_MONITORING=true